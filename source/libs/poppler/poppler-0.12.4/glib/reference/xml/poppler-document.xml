<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="poppler-poppler-document">
<refmeta>
<refentrytitle role="top_of_page" id="poppler-poppler-document.top_of_page">PopplerDocument</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>POPPLER Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>PopplerDocument</refname>
<refpurpose>Information about a document</refpurpose>
</refnamediv>

<refsynopsisdiv id="poppler-poppler-document.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
enum                <link linkend="PopplerPageLayout">PopplerPageLayout</link>;
enum                <link linkend="PopplerPageMode">PopplerPageMode</link>;
enum                <link linkend="PopplerFontType">PopplerFontType</link>;
enum                <link linkend="PopplerViewerPreferences">PopplerViewerPreferences</link>;
enum                <link linkend="PopplerPermissions">PopplerPermissions</link>;
<link linkend="PopplerDocument">PopplerDocument</link> *   <link linkend="poppler-document-new-from-file">poppler_document_new_from_file</link>      (const <link linkend="char">char</link> *uri,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="PopplerDocument">PopplerDocument</link> *   <link linkend="poppler-document-new-from-data">poppler_document_new_from_data</link>      (<link linkend="char">char</link> *data,
                                                         <link linkend="int">int</link> length,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="gboolean">gboolean</link>            <link linkend="poppler-document-save">poppler_document_save</link>               (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         const <link linkend="char">char</link> *uri,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="int">int</link>                 <link linkend="poppler-document-get-n-pages">poppler_document_get_n_pages</link>        (<link linkend="PopplerDocument">PopplerDocument</link> *document);
<link linkend="PopplerPage">PopplerPage</link> *       <link linkend="poppler-document-get-page">poppler_document_get_page</link>           (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         <link linkend="int">int</link> index);
<link linkend="PopplerPage">PopplerPage</link> *       <link linkend="poppler-document-get-page-by-label">poppler_document_get_page_by_label</link>  (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         const <link linkend="char">char</link> *label);
<link linkend="PopplerDest">PopplerDest</link> *       <link linkend="poppler-document-find-dest">poppler_document_find_dest</link>          (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         const <link linkend="gchar">gchar</link> *link_name);
<link linkend="gboolean">gboolean</link>            <link linkend="poppler-document-has-attachments">poppler_document_has_attachments</link>    (<link linkend="PopplerDocument">PopplerDocument</link> *document);
<link linkend="GList">GList</link> *             <link linkend="poppler-document-get-attachments">poppler_document_get_attachments</link>    (<link linkend="PopplerDocument">PopplerDocument</link> *document);
<link linkend="PopplerFormField">PopplerFormField</link> *  <link linkend="poppler-document-get-form-field">poppler_document_get_form_field</link>     (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         <link linkend="gint">gint</link> id);
<link linkend="GType">GType</link>               <link linkend="poppler-index-iter-get-type">poppler_index_iter_get_type</link>         (void);
<link linkend="PopplerIndexIter">PopplerIndexIter</link> *  <link linkend="poppler-index-iter-new">poppler_index_iter_new</link>              (<link linkend="PopplerDocument">PopplerDocument</link> *document);
<link linkend="PopplerIndexIter">PopplerIndexIter</link> *  <link linkend="poppler-index-iter-copy">poppler_index_iter_copy</link>             (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *iter);
<link linkend="void">void</link>                <link linkend="poppler-index-iter-free">poppler_index_iter_free</link>             (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *iter);
<link linkend="PopplerIndexIter">PopplerIndexIter</link> *  <link linkend="poppler-index-iter-get-child">poppler_index_iter_get_child</link>        (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *parent);
<link linkend="gboolean">gboolean</link>            <link linkend="poppler-index-iter-is-open">poppler_index_iter_is_open</link>          (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *iter);
<link linkend="PopplerAction">PopplerAction</link> *     <link linkend="poppler-index-iter-get-action">poppler_index_iter_get_action</link>       (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *iter);
<link linkend="gboolean">gboolean</link>            <link linkend="poppler-index-iter-next">poppler_index_iter_next</link>             (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *iter);
<link linkend="PopplerFontInfo">PopplerFontInfo</link> *   <link linkend="poppler-font-info-new">poppler_font_info_new</link>               (<link linkend="PopplerDocument">PopplerDocument</link> *document);
<link linkend="gboolean">gboolean</link>            <link linkend="poppler-font-info-scan">poppler_font_info_scan</link>              (<link linkend="PopplerFontInfo">PopplerFontInfo</link> *font_info,
                                                         <link linkend="int">int</link> n_pages,
                                                         <link linkend="PopplerFontsIter">PopplerFontsIter</link> **iter);
<link linkend="void">void</link>                <link linkend="poppler-font-info-free">poppler_font_info_free</link>              (<link linkend="PopplerFontInfo">PopplerFontInfo</link> *font_info);
<link linkend="GType">GType</link>               <link linkend="poppler-fonts-iter-get-type">poppler_fonts_iter_get_type</link>         (void);
<link linkend="PopplerFontsIter">PopplerFontsIter</link> *  <link linkend="poppler-fonts-iter-copy">poppler_fonts_iter_copy</link>             (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);
<link linkend="void">void</link>                <link linkend="poppler-fonts-iter-free">poppler_fonts_iter_free</link>             (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);
const <link linkend="char">char</link> *        <link linkend="poppler-fonts-iter-get-name">poppler_fonts_iter_get_name</link>         (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);
const <link linkend="char">char</link> *        <link linkend="poppler-fonts-iter-get-full-name">poppler_fonts_iter_get_full_name</link>    (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);
<link linkend="PopplerFontType">PopplerFontType</link>     <link linkend="poppler-fonts-iter-get-font-type">poppler_fonts_iter_get_font_type</link>    (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);
<link linkend="gboolean">gboolean</link>            <link linkend="poppler-fonts-iter-is-embedded">poppler_fonts_iter_is_embedded</link>      (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);
<link linkend="gboolean">gboolean</link>            <link linkend="poppler-fonts-iter-is-subset">poppler_fonts_iter_is_subset</link>        (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);
<link linkend="gboolean">gboolean</link>            <link linkend="poppler-fonts-iter-next">poppler_fonts_iter_next</link>             (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);
<link linkend="PopplerPSFile">PopplerPSFile</link> *     <link linkend="poppler-ps-file-new">poppler_ps_file_new</link>                 (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="int">int</link> first_page,
                                                         <link linkend="int">int</link> n_pages);
<link linkend="void">void</link>                <link linkend="poppler-ps-file-set-paper-size">poppler_ps_file_set_paper_size</link>      (<link linkend="PopplerPSFile">PopplerPSFile</link> *ps_file,
                                                         <link linkend="double">double</link> width,
                                                         <link linkend="double">double</link> height);
<link linkend="void">void</link>                <link linkend="poppler-ps-file-set-duplex">poppler_ps_file_set_duplex</link>          (<link linkend="PopplerPSFile">PopplerPSFile</link> *ps_file,
                                                         <link linkend="gboolean">gboolean</link> duplex);
<link linkend="void">void</link>                <link linkend="poppler-ps-file-free">poppler_ps_file_free</link>                (<link linkend="PopplerPSFile">PopplerPSFile</link> *ps_file);
</synopsis>
</refsynopsisdiv>









<refsect1 id="poppler-poppler-document.description" role="desc">
<title role="desc.title">Description</title>
<para>
The <link linkend="PopplerDocument"><type>PopplerDocument</type></link> is an object used to refer to a main document.
</para>
</refsect1>

<refsect1 id="poppler-poppler-document.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="PopplerPageLayout" role="enum">
<title>enum PopplerPageLayout</title>
<indexterm zone="PopplerPageLayout"><primary sortas="PopplerPageLayout">PopplerPageLayout</primary></indexterm><programlisting>typedef enum
{
  POPPLER_PAGE_LAYOUT_UNSET,
  POPPLER_PAGE_LAYOUT_SINGLE_PAGE,
  POPPLER_PAGE_LAYOUT_ONE_COLUMN,
  POPPLER_PAGE_LAYOUT_TWO_COLUMN_LEFT,
  POPPLER_PAGE_LAYOUT_TWO_COLUMN_RIGHT,
  POPPLER_PAGE_LAYOUT_TWO_PAGE_LEFT,
  POPPLER_PAGE_LAYOUT_TWO_PAGE_RIGHT
} PopplerPageLayout;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="PopplerPageMode" role="enum">
<title>enum PopplerPageMode</title>
<indexterm zone="PopplerPageMode"><primary sortas="PopplerPageMode">PopplerPageMode</primary></indexterm><programlisting>typedef enum
{
  POPPLER_PAGE_MODE_UNSET,
  POPPLER_PAGE_MODE_NONE,
  POPPLER_PAGE_MODE_USE_OUTLINES,
  POPPLER_PAGE_MODE_USE_THUMBS,
  POPPLER_PAGE_MODE_FULL_SCREEN,
  POPPLER_PAGE_MODE_USE_OC,
  POPPLER_PAGE_MODE_USE_ATTACHMENTS
} PopplerPageMode;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="PopplerFontType" role="enum">
<title>enum PopplerFontType</title>
<indexterm zone="PopplerFontType"><primary sortas="PopplerFontType">PopplerFontType</primary></indexterm><programlisting>typedef enum
{
  POPPLER_FONT_TYPE_UNKNOWN,
  POPPLER_FONT_TYPE_TYPE1,
  POPPLER_FONT_TYPE_TYPE1C,
  POPPLER_FONT_TYPE_TYPE1COT,
  POPPLER_FONT_TYPE_TYPE3,
  POPPLER_FONT_TYPE_TRUETYPE,
  POPPLER_FONT_TYPE_TRUETYPEOT,
  POPPLER_FONT_TYPE_CID_TYPE0,
  POPPLER_FONT_TYPE_CID_TYPE0C,
  POPPLER_FONT_TYPE_CID_TYPE0COT,
  POPPLER_FONT_TYPE_CID_TYPE2,
  POPPLER_FONT_TYPE_CID_TYPE2OT
} PopplerFontType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="PopplerViewerPreferences" role="enum">
<title>enum PopplerViewerPreferences</title>
<indexterm zone="PopplerViewerPreferences"><primary sortas="PopplerViewerPreferences">PopplerViewerPreferences</primary></indexterm><programlisting>typedef enum /*&lt; flags &gt;*/
{
  POPPLER_VIEWER_PREFERENCES_UNSET = 0,
  POPPLER_VIEWER_PREFERENCES_HIDE_TOOLBAR = 1 &lt;&lt; 0,
  POPPLER_VIEWER_PREFERENCES_HIDE_MENUBAR = 1 &lt;&lt; 1,
  POPPLER_VIEWER_PREFERENCES_HIDE_WINDOWUI = 1 &lt;&lt; 2,
  POPPLER_VIEWER_PREFERENCES_FIT_WINDOW = 1 &lt;&lt; 3,
  POPPLER_VIEWER_PREFERENCES_CENTER_WINDOW = 1 &lt;&lt; 4,
  POPPLER_VIEWER_PREFERENCES_DISPLAY_DOC_TITLE = 1 &lt;&lt; 5,
  POPPLER_VIEWER_PREFERENCES_DIRECTION_RTL = 1 &lt;&lt; 6
} PopplerViewerPreferences;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="PopplerPermissions" role="enum">
<title>enum PopplerPermissions</title>
<indexterm zone="PopplerPermissions"><primary sortas="PopplerPermissions">PopplerPermissions</primary></indexterm><programlisting>typedef enum /*&lt; flags &gt;*/
{
  POPPLER_PERMISSIONS_OK_TO_PRINT = 1 &lt;&lt; 0,
  POPPLER_PERMISSIONS_OK_TO_MODIFY = 1 &lt;&lt; 1,
  POPPLER_PERMISSIONS_OK_TO_COPY = 1 &lt;&lt; 2,
  POPPLER_PERMISSIONS_OK_TO_ADD_NOTES = 1 &lt;&lt; 3,
  POPPLER_PERMISSIONS_OK_TO_FILL_FORM = 1 &lt;&lt; 4,
  POPPLER_PERMISSIONS_FULL = (POPPLER_PERMISSIONS_OK_TO_PRINT | POPPLER_PERMISSIONS_OK_TO_MODIFY | POPPLER_PERMISSIONS_OK_TO_COPY | POPPLER_PERMISSIONS_OK_TO_ADD_NOTES | POPPLER_PERMISSIONS_OK_TO_FILL_FORM)

} PopplerPermissions;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="poppler-document-new-from-file" role="function">
<title>poppler_document_new_from_file ()</title>
<indexterm zone="poppler-document-new-from-file"><primary sortas="poppler_document_new_from_file">poppler_document_new_from_file</primary></indexterm><programlisting><link linkend="PopplerDocument">PopplerDocument</link> *   poppler_document_new_from_file      (const <link linkend="char">char</link> *uri,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Creates a new <link linkend="PopplerDocument"><type>PopplerDocument</type></link>.  If <link linkend="NULL--CAPS"><literal>NULL</literal></link> is returned, then <parameter>error</parameter> will be
set. Possible errors include those in the <link linkend="POPPLER-ERROR--CAPS"><type>POPPLER_ERROR</type></link> and <link linkend="G-FILE-ERROR--CAPS"><type>G_FILE_ERROR</type></link>
domains.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara> uri of the file to load
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> password to unlock the file with, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> Return location for an error, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly created <link linkend="PopplerDocument"><type>PopplerDocument</type></link>, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-document-new-from-data" role="function">
<title>poppler_document_new_from_data ()</title>
<indexterm zone="poppler-document-new-from-data"><primary sortas="poppler_document_new_from_data">poppler_document_new_from_data</primary></indexterm><programlisting><link linkend="PopplerDocument">PopplerDocument</link> *   poppler_document_new_from_data      (<link linkend="char">char</link> *data,
                                                         <link linkend="int">int</link> length,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Creates a new <link linkend="PopplerDocument"><type>PopplerDocument</type></link>.  If <link linkend="NULL--CAPS"><literal>NULL</literal></link> is returned, then <parameter>error</parameter> will be
set. Possible errors include those in the <link linkend="POPPLER-ERROR--CAPS"><type>POPPLER_ERROR</type></link> and <link linkend="G-FILE-ERROR--CAPS"><type>G_FILE_ERROR</type></link>
domains.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara> the pdf data contained in a char array
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&#160;:</term>
<listitem><simpara> the length of <link linkend="data"><type>data</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara> password to unlock the file with, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> Return location for an error, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly created <link linkend="PopplerDocument"><type>PopplerDocument</type></link>, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-document-save" role="function">
<title>poppler_document_save ()</title>
<indexterm zone="poppler-document-save"><primary sortas="poppler_document_save">poppler_document_save</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            poppler_document_save               (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         const <link linkend="char">char</link> *uri,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Saves <parameter>document</parameter>. Any change made in the document such as 
form fields filled by the user will be saved. 
If <parameter>error</parameter> is set, <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> will be returned. Possible errors
include those in the <link linkend="G-FILE-ERROR--CAPS"><type>G_FILE_ERROR</type></link> domain.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="PopplerDocument"><type>PopplerDocument</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara> uri of file to save
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> return location for an error, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, if the document was successfully saved
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-document-get-n-pages" role="function">
<title>poppler_document_get_n_pages ()</title>
<indexterm zone="poppler-document-get-n-pages"><primary sortas="poppler_document_get_n_pages">poppler_document_get_n_pages</primary></indexterm><programlisting><link linkend="int">int</link>                 poppler_document_get_n_pages        (<link linkend="PopplerDocument">PopplerDocument</link> *document);</programlisting>
<para>
Returns the number of pages in a loaded document.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="PopplerDocument"><type>PopplerDocument</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Number of pages
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-document-get-page" role="function">
<title>poppler_document_get_page ()</title>
<indexterm zone="poppler-document-get-page"><primary sortas="poppler_document_get_page">poppler_document_get_page</primary></indexterm><programlisting><link linkend="PopplerPage">PopplerPage</link> *       poppler_document_get_page           (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         <link linkend="int">int</link> index);</programlisting>
<para>
Returns the <link linkend="PopplerPage"><type>PopplerPage</type></link> indexed at <parameter>index</parameter>.  This object is owned by the
caller.
</para>
<para>
<link linkend="PopplerPage"><type>PopplerPage</type></link><!-- -->s are indexed starting at 0.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="PopplerDocument"><type>PopplerDocument</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara> a page index 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The <link linkend="PopplerPage"><type>PopplerPage</type></link> at <parameter>index</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-document-get-page-by-label" role="function">
<title>poppler_document_get_page_by_label ()</title>
<indexterm zone="poppler-document-get-page-by-label"><primary sortas="poppler_document_get_page_by_label">poppler_document_get_page_by_label</primary></indexterm><programlisting><link linkend="PopplerPage">PopplerPage</link> *       poppler_document_get_page_by_label  (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         const <link linkend="char">char</link> *label);</programlisting>
<para>
Returns the <link linkend="PopplerPage"><type>PopplerPage</type></link> reference by <parameter>label</parameter>.  This object is owned by the
caller.  <parameter>label</parameter> is a human-readable string representation of the page number,
and can be document specific.  Typically, it is a value such as "iii" or "3".
</para>
<para>
By default, "1" refers to the first page.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="PopplerDocument"><type>PopplerDocument</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara> a page label
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The <link linkend="PopplerPage"><type>PopplerPage</type></link> referenced by <parameter>label</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-document-find-dest" role="function">
<title>poppler_document_find_dest ()</title>
<indexterm zone="poppler-document-find-dest"><primary sortas="poppler_document_find_dest">poppler_document_find_dest</primary></indexterm><programlisting><link linkend="PopplerDest">PopplerDest</link> *       poppler_document_find_dest          (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         const <link linkend="gchar">gchar</link> *link_name);</programlisting>
<para>
Finds named destination <parameter>link_name</parameter> in <parameter>document</parameter></para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="PopplerDocument"><type>PopplerDocument</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>link_name</parameter>&#160;:</term>
<listitem><simpara> a named destination
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The <link linkend="PopplerDest"><type>PopplerDest</type></link> destination or <link linkend="NULL--CAPS"><literal>NULL</literal></link> if
<parameter>link_name</parameter> is not a destination. Returned value must
be freed with <link linkend="poppler-dest-free"><type>poppler_dest_free</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-document-has-attachments" role="function">
<title>poppler_document_has_attachments ()</title>
<indexterm zone="poppler-document-has-attachments"><primary sortas="poppler_document_has_attachments">poppler_document_has_attachments</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            poppler_document_has_attachments    (<link linkend="PopplerDocument">PopplerDocument</link> *document);</programlisting>
<para>
Returns <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> of <parameter>document</parameter> has any attachments.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="PopplerDocument"><type>PopplerDocument</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, if <parameter>document</parameter> has attachments.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-document-get-attachments" role="function">
<title>poppler_document_get_attachments ()</title>
<indexterm zone="poppler-document-get-attachments"><primary sortas="poppler_document_get_attachments">poppler_document_get_attachments</primary></indexterm><programlisting><link linkend="GList">GList</link> *             poppler_document_get_attachments    (<link linkend="PopplerDocument">PopplerDocument</link> *document);</programlisting>
<para>
Returns a <link linkend="GList"><type>GList</type></link> containing <link linkend="PopplerAttachment"><type>PopplerAttachment</type></link><!-- -->s.  These attachments
are unowned, and must be unreffed, and the list must be freed with
<link linkend="g-list-free"><function>g_list_free()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="PopplerDocument"><type>PopplerDocument</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a list of available attachments.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-document-get-form-field" role="function">
<title>poppler_document_get_form_field ()</title>
<indexterm zone="poppler-document-get-form-field"><primary sortas="poppler_document_get_form_field">poppler_document_get_form_field</primary></indexterm><programlisting><link linkend="PopplerFormField">PopplerFormField</link> *  poppler_document_get_form_field     (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         <link linkend="gint">gint</link> id);</programlisting>
<para>
Returns the <link linkend="PopplerFormField"><type>PopplerFormField</type></link> for the given <parameter>id</parameter>. It must be freed with
<link linkend="g-object-unref"><function>g_object_unref()</function></link></para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="PopplerDocument"><type>PopplerDocument</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&#160;:</term>
<listitem><simpara> an id of a <link linkend="PopplerFormField"><type>PopplerFormField</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new <link linkend="PopplerFormField"><type>PopplerFormField</type></link> or NULL if not found
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-index-iter-get-type" role="function">
<title>poppler_index_iter_get_type ()</title>
<indexterm zone="poppler-index-iter-get-type"><primary sortas="poppler_index_iter_get_type">poppler_index_iter_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               poppler_index_iter_get_type         (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-index-iter-new" role="function">
<title>poppler_index_iter_new ()</title>
<indexterm zone="poppler-index-iter-new"><primary sortas="poppler_index_iter_new">poppler_index_iter_new</primary></indexterm><programlisting><link linkend="PopplerIndexIter">PopplerIndexIter</link> *  poppler_index_iter_new              (<link linkend="PopplerDocument">PopplerDocument</link> *document);</programlisting>
<para>
Returns the root <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link> for <parameter>document</parameter>, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>.  This must be
freed with <link linkend="poppler-index-iter-free"><function>poppler_index_iter_free()</function></link>.
</para>
<para>
Certain documents have an index associated with them.  This index can be used
to help the user navigate the document, and is similar to a table of
contents.  Each node in the index will contain a <link linkend="PopplerAction"><type>PopplerAction</type></link> that can be
displayed to the user &mdash; typically a <link linkend="POPPLER-ACTION-GOTO-DEST--CAPS"><type>POPPLER_ACTION_GOTO_DEST</type></link> or a
<link linkend="POPPLER-ACTION-URI--CAPS"><type>POPPLER_ACTION_URI</type></link><!-- -->.
</para>
<para>
Here is a simple example of some code that walks the full index:
</para>
<para>
<informalexample><programlisting>
static void
walk_index (PopplerIndexIter *iter)
{
  do
    {
      /<!-- -->* Get the the action and do something with it *<!-- -->/
      PopplerIndexIter *child = poppler_index_iter_get_child (iter);
      if (child)
        walk_index (child);
      poppler_index_iter_free (child);
    }
  while (poppler_index_iter_next (iter));
}
...
{
  iter = poppler_index_iter_new (document);
  walk_index (iter);
  poppler_index_iter_free (iter);
}
</programlisting></informalexample></para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="PopplerDocument"><type>PopplerDocument</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-index-iter-copy" role="function">
<title>poppler_index_iter_copy ()</title>
<indexterm zone="poppler-index-iter-copy"><primary sortas="poppler_index_iter_copy">poppler_index_iter_copy</primary></indexterm><programlisting><link linkend="PopplerIndexIter">PopplerIndexIter</link> *  poppler_index_iter_copy             (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *iter);</programlisting>
<para>
Creates a new <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link> as a copy of <parameter>iter</parameter>.  This must be freed with
<link linkend="poppler-index-iter-free"><function>poppler_index_iter_free()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-index-iter-free" role="function">
<title>poppler_index_iter_free ()</title>
<indexterm zone="poppler-index-iter-free"><primary sortas="poppler_index_iter_free">poppler_index_iter_free</primary></indexterm><programlisting><link linkend="void">void</link>                poppler_index_iter_free             (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *iter);</programlisting>
<para>
Frees <parameter>iter</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-index-iter-get-child" role="function">
<title>poppler_index_iter_get_child ()</title>
<indexterm zone="poppler-index-iter-get-child"><primary sortas="poppler_index_iter_get_child">poppler_index_iter_get_child</primary></indexterm><programlisting><link linkend="PopplerIndexIter">PopplerIndexIter</link> *  poppler_index_iter_get_child        (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *parent);</programlisting>
<para>
Returns a newly created child of <parameter>parent</parameter>, or <link linkend="NULL--CAPS"><literal>NULL</literal></link> if the iter has no child.
See <link linkend="poppler-index-iter-new"><function>poppler_index_iter_new()</function></link> for more information on this function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-index-iter-is-open" role="function">
<title>poppler_index_iter_is_open ()</title>
<indexterm zone="poppler-index-iter-is-open"><primary sortas="poppler_index_iter_is_open">poppler_index_iter_is_open</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            poppler_index_iter_is_open          (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *iter);</programlisting>
<para>
Returns whether this node should be expanded by default to the user.  The
document can provide a hint as to how the document's index should be expanded
initially.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, if the document wants <parameter>iter</parameter> to be expanded
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-index-iter-get-action" role="function">
<title>poppler_index_iter_get_action ()</title>
<indexterm zone="poppler-index-iter-get-action"><primary sortas="poppler_index_iter_get_action">poppler_index_iter_get_action</primary></indexterm><programlisting><link linkend="PopplerAction">PopplerAction</link> *     poppler_index_iter_get_action       (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *iter);</programlisting>
<para>
Returns the <link linkend="PopplerAction"><type>PopplerAction</type></link> associated with <parameter>iter</parameter>.  It must be freed with
<link linkend="poppler-action-free"><function>poppler_action_free()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new <link linkend="PopplerAction"><type>PopplerAction</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-index-iter-next" role="function">
<title>poppler_index_iter_next ()</title>
<indexterm zone="poppler-index-iter-next"><primary sortas="poppler_index_iter_next">poppler_index_iter_next</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            poppler_index_iter_next             (<link linkend="PopplerIndexIter">PopplerIndexIter</link> *iter);</programlisting>
<para>
Sets <parameter>iter</parameter> to point to the next action at the current level, if valid.  See
<link linkend="poppler-index-iter-new"><function>poppler_index_iter_new()</function></link> for more information.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="PopplerIndexIter"><type>PopplerIndexIter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, if <parameter>iter</parameter> was set to the next action
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-font-info-new" role="function">
<title>poppler_font_info_new ()</title>
<indexterm zone="poppler-font-info-new"><primary sortas="poppler_font_info_new">poppler_font_info_new</primary></indexterm><programlisting><link linkend="PopplerFontInfo">PopplerFontInfo</link> *   poppler_font_info_new               (<link linkend="PopplerDocument">PopplerDocument</link> *document);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-font-info-scan" role="function">
<title>poppler_font_info_scan ()</title>
<indexterm zone="poppler-font-info-scan"><primary sortas="poppler_font_info_scan">poppler_font_info_scan</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            poppler_font_info_scan              (<link linkend="PopplerFontInfo">PopplerFontInfo</link> *font_info,
                                                         <link linkend="int">int</link> n_pages,
                                                         <link linkend="PopplerFontsIter">PopplerFontsIter</link> **iter);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font_info</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_pages</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-font-info-free" role="function">
<title>poppler_font_info_free ()</title>
<indexterm zone="poppler-font-info-free"><primary sortas="poppler_font_info_free">poppler_font_info_free</primary></indexterm><programlisting><link linkend="void">void</link>                poppler_font_info_free              (<link linkend="PopplerFontInfo">PopplerFontInfo</link> *font_info);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>font_info</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-fonts-iter-get-type" role="function">
<title>poppler_fonts_iter_get_type ()</title>
<indexterm zone="poppler-fonts-iter-get-type"><primary sortas="poppler_fonts_iter_get_type">poppler_fonts_iter_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               poppler_fonts_iter_get_type         (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-fonts-iter-copy" role="function">
<title>poppler_fonts_iter_copy ()</title>
<indexterm zone="poppler-fonts-iter-copy"><primary sortas="poppler_fonts_iter_copy">poppler_fonts_iter_copy</primary></indexterm><programlisting><link linkend="PopplerFontsIter">PopplerFontsIter</link> *  poppler_fonts_iter_copy             (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-fonts-iter-free" role="function">
<title>poppler_fonts_iter_free ()</title>
<indexterm zone="poppler-fonts-iter-free"><primary sortas="poppler_fonts_iter_free">poppler_fonts_iter_free</primary></indexterm><programlisting><link linkend="void">void</link>                poppler_fonts_iter_free             (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-fonts-iter-get-name" role="function">
<title>poppler_fonts_iter_get_name ()</title>
<indexterm zone="poppler-fonts-iter-get-name"><primary sortas="poppler_fonts_iter_get_name">poppler_fonts_iter_get_name</primary></indexterm><programlisting>const <link linkend="char">char</link> *        poppler_fonts_iter_get_name         (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-fonts-iter-get-full-name" role="function">
<title>poppler_fonts_iter_get_full_name ()</title>
<indexterm zone="poppler-fonts-iter-get-full-name"><primary sortas="poppler_fonts_iter_get_full_name">poppler_fonts_iter_get_full_name</primary></indexterm><programlisting>const <link linkend="char">char</link> *        poppler_fonts_iter_get_full_name    (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-fonts-iter-get-font-type" role="function">
<title>poppler_fonts_iter_get_font_type ()</title>
<indexterm zone="poppler-fonts-iter-get-font-type"><primary sortas="poppler_fonts_iter_get_font_type">poppler_fonts_iter_get_font_type</primary></indexterm><programlisting><link linkend="PopplerFontType">PopplerFontType</link>     poppler_fonts_iter_get_font_type    (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-fonts-iter-is-embedded" role="function">
<title>poppler_fonts_iter_is_embedded ()</title>
<indexterm zone="poppler-fonts-iter-is-embedded"><primary sortas="poppler_fonts_iter_is_embedded">poppler_fonts_iter_is_embedded</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            poppler_fonts_iter_is_embedded      (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-fonts-iter-is-subset" role="function">
<title>poppler_fonts_iter_is_subset ()</title>
<indexterm zone="poppler-fonts-iter-is-subset"><primary sortas="poppler_fonts_iter_is_subset">poppler_fonts_iter_is_subset</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            poppler_fonts_iter_is_subset        (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-fonts-iter-next" role="function">
<title>poppler_fonts_iter_next ()</title>
<indexterm zone="poppler-fonts-iter-next"><primary sortas="poppler_fonts_iter_next">poppler_fonts_iter_next</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            poppler_fonts_iter_next             (<link linkend="PopplerFontsIter">PopplerFontsIter</link> *iter);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iter</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-ps-file-new" role="function">
<title>poppler_ps_file_new ()</title>
<indexterm zone="poppler-ps-file-new"><primary sortas="poppler_ps_file_new">poppler_ps_file_new</primary></indexterm><programlisting><link linkend="PopplerPSFile">PopplerPSFile</link> *     poppler_ps_file_new                 (<link linkend="PopplerDocument">PopplerDocument</link> *document,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="int">int</link> first_page,
                                                         <link linkend="int">int</link> n_pages);</programlisting>
<para>
Create a new postscript file to render to</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>document</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="PopplerDocument"><type>PopplerDocument</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> the path of the output filename
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>first_page</parameter>&#160;:</term>
<listitem><simpara> the first page to print
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_pages</parameter>&#160;:</term>
<listitem><simpara> the number of pages to print
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a PopplerPSFile 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-ps-file-set-paper-size" role="function">
<title>poppler_ps_file_set_paper_size ()</title>
<indexterm zone="poppler-ps-file-set-paper-size"><primary sortas="poppler_ps_file_set_paper_size">poppler_ps_file_set_paper_size</primary></indexterm><programlisting><link linkend="void">void</link>                poppler_ps_file_set_paper_size      (<link linkend="PopplerPSFile">PopplerPSFile</link> *ps_file,
                                                         <link linkend="double">double</link> width,
                                                         <link linkend="double">double</link> height);</programlisting>
<para>
Set the output paper size. These values will end up in the
DocumentMedia, the BoundingBox DSC comments and other places in the
generated PostScript.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ps_file</parameter>&#160;:</term>
<listitem><simpara> a PopplerPSFile which was not yet printed to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&#160;:</term>
<listitem><simpara> the paper width in 1/72 inch
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&#160;:</term>
<listitem><simpara> the paper height in 1/72 inch
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-ps-file-set-duplex" role="function">
<title>poppler_ps_file_set_duplex ()</title>
<indexterm zone="poppler-ps-file-set-duplex"><primary sortas="poppler_ps_file_set_duplex">poppler_ps_file_set_duplex</primary></indexterm><programlisting><link linkend="void">void</link>                poppler_ps_file_set_duplex          (<link linkend="PopplerPSFile">PopplerPSFile</link> *ps_file,
                                                         <link linkend="gboolean">gboolean</link> duplex);</programlisting>
<para>
Enable or disable Duplex printing.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ps_file</parameter>&#160;:</term>
<listitem><simpara> a PopplerPSFile which was not yet printed to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>duplex</parameter>&#160;:</term>
<listitem><simpara> whether to force duplex printing (on printers which support this)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="poppler-ps-file-free" role="function">
<title>poppler_ps_file_free ()</title>
<indexterm zone="poppler-ps-file-free"><primary sortas="poppler_ps_file_free">poppler_ps_file_free</primary></indexterm><programlisting><link linkend="void">void</link>                poppler_ps_file_free                (<link linkend="PopplerPSFile">PopplerPSFile</link> *ps_file);</programlisting>
<para>
Frees <parameter>ps_file</parameter></para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ps_file</parameter>&#160;:</term>
<listitem><simpara> a PopplerPSFile
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
